# -*- coding: utf-8 -*-
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, CallbackQueryHandler
from telegram.error import Forbidden, TelegramError # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
from telegram.constants import ParseMode # –î–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–π —Ä–∞–∑–º–µ—Ç–∫–∏ –ø–æ–¥–ø–∏—Å–∏

import io # –ù—É–∂–µ–Ω –¥–ª—è InputFile –∏–∑ –±–∞–π—Ç–æ–≤

from .. import config
from ..post_logger import log_post # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
from ..openai_client import generate_image # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
from ..utils import download_image # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

logger = logging.getLogger(__name__)

# --- Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---
INLINE_ACTION_KB = InlineKeyboardMarkup([
    [
        InlineKeyboardButton("üì§ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", callback_data="publish"),
        InlineKeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å", callback_data="delete")
    ]
])

# ============================================================
# --- –û–ë–ù–û–í–õ–ï–ù–ù–´–ô –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏ ---
# ============================================================
async def handle_callback(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏ ('publish', 'delete')."""
    query = update.callback_query
    if not query or not query.data:
        logger.warning("–ü–æ–ª—É—á–µ–Ω –ø—É—Å—Ç–æ–π callback_query –∏–ª–∏ query.data")
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∞–¥–º–∏–Ω
    if query.from_user.id != config.ADMIN_ID:
        try:
            # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –∫–æ–ª–ª–±—ç–∫ —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± –æ—à–∏–±–∫–µ
            await query.answer("üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω.", show_alert=True)
        except TelegramError as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ callback –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        return

    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –∫–æ–ª–±—ç–∫, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ—Å—Ç–∞–ª–∞ "–≥—Ä—É–∑–∏—Ç—å—Å—è"
    try:
        await query.answer()
    except TelegramError as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ callback_query: {e}")


    # --- –õ–æ–≥–∏–∫–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å" ---
    if query.data == "publish":
        if not query.message:
             logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ callback_query –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.")
             # –£–≤–µ–¥–æ–º–∏—Ç—å –∞–¥–º–∏–Ω–∞ –æ–± –æ—à–∏–±–∫–µ?
             await ctx.bot.send_message(config.ADMIN_ID, "‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.")
             return

        original_message_text = query.message.text # –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞
        if not original_message_text:
             logger.error("–°–æ–æ–±—â–µ–Ω–∏–µ, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å', –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç–∞.")
             await query.edit_message_text("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ç–µ–∫—Å—Ç —á–µ—Ä–Ω–æ–≤–∏–∫–∞.")
             return

        # 1. –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —á–µ—Ä–Ω–æ–≤–∏–∫–æ–º
        text_to_publish = original_message_text
        # –°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—Ä–µ—Ñ–∏–∫—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å
        prefixes_to_remove = [
            "üí° –ß–µ—Ä–Ω–æ–≤–∏–∫:", "üì∞ –ù–æ–≤–æ—Å—Ç—å:", "‚öôÔ∏è –ê–≤—Ç–æ–ø–æ—Å—Ç:",
            "üí° –ß–µ—Ä–Ω–æ–≤–∏–∫ (Perplexity):", "‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –º–æ–¥–µ–ª—å" # –£–¥–∞–ª—è–µ–º –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –º–æ–¥–µ–ª–∏
        ]
        # –ò—â–µ–º –∏ —É–¥–∞–ª—è–µ–º –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å (–∏ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –ø–æ—Å–ª–µ –Ω–µ–≥–æ)
        for prefix in prefixes_to_remove:
             # –ò—â–µ–º –ø—Ä–µ—Ñ–∏–∫—Å —Å –≤–æ–∑–º–æ–∂–Ω—ã–º –¥–≤–æ–µ—Ç–æ—á–∏–µ–º –∏–ª–∏ –±–µ–∑, –∏ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏
             if text_to_publish.strip().startswith(prefix.strip()):
                 # –£–¥–∞–ª—è–µ–º –ø—Ä–µ—Ñ–∏–∫—Å –∏ –≤—Å–µ –¥–æ –ø–µ—Ä–≤–æ–≥–æ –æ—Å–º—ã—Å–ª–µ–Ω–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ –ø–æ—Å–ª–µ –Ω–µ–≥–æ
                 parts = text_to_publish.split(prefix.strip(), 1)
                 if len(parts) > 1:
                     text_to_publish = parts[1].strip()
                 else: # –ï—Å–ª–∏ –≤–¥—Ä—É–≥ –ø—Ä–µ—Ñ–∏–∫—Å –±—ã–ª –≤—Å–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
                     text_to_publish = ""
                 break # –£–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–∫—Å—Ç –Ω–µ –ø—É—Å—Ç –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–µ—Ñ–∏–∫—Å–æ–≤
        if not text_to_publish:
             logger.warning("–ü–æ–ø—ã—Ç–∫–∞ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø—É—Å—Ç–æ–π —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–µ—Ñ–∏–∫—Å–∞.")
             await query.edit_message_text("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Ç–µ–∫—Å—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ (—Ç–µ–∫—Å—Ç –ø—É—Å—Ç –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è —Å–ª—É–∂–µ–±–Ω—ã—Ö –ø—Ä–µ—Ñ–∏–∫—Å–æ–≤).")
             return
        logger.info(f"–ò–∑–≤–ª–µ—á–µ–Ω —Ç–µ–∫—Å—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: '{text_to_publish[:100].replace(chr(10),' ')}...'")


        # 2. –ü—ã—Ç–∞–µ–º—Å—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏ —Å–∫–∞—á–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ
        image_bytes = None
        if config.IMAGE_GENERATION_ENABLED:
            # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∞ –æ –Ω–∞—á–∞–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
            try:
                await query.edit_message_text("‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ—Å—Ç–∞...")
            except TelegramError as e:
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∞ –ø–µ—Ä–µ–¥ –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")

            try:
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ –∫–∞–∫ –ø—Ä–æ–º–ø—Ç
                image_url = await generate_image(text_to_publish)

                if image_url:
                    # –ü—ã—Ç–∞–µ–º—Å—è —Å–∫–∞—á–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                    image_bytes = await download_image(image_url)
                    if not image_bytes:
                        logger.warning("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ URL.")
                        try:
                             await query.edit_message_text("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É. –ü—É–±–ª–∏–∫—É—é —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç...")
                        except TelegramError as e: logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞: {e}")
                        # image_bytes —É–∂–µ None
                    else:
                         logger.info("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ—Å—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∏ —Å–∫–∞—á–∞–Ω–æ.")
                         # –ù–µ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞ –∑–¥–µ—Å—å, —Ç.–∫. —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
                else:
                    logger.warning("–§—É–Ω–∫—Ü–∏—è generate_image –Ω–µ –≤–µ—Ä–Ω—É–ª–∞ URL.")
                    try:
                         await query.edit_message_text("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É (–Ω–µ—Ç URL). –ü—É–±–ª–∏–∫—É—é —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç...")
                    except TelegramError as e: logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞: {e}")
                    image_bytes = None # –£–±–µ–∂–¥–∞–µ–º—Å—è

            except Exception as img_e:
                logger.error(f"–û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–ª–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {img_e}", exc_info=True)
                try:
                    # –°–æ–æ–±—â–∞–µ–º –æ–± –æ—à–∏–±–∫–µ, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç
                    await query.edit_message_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏ ({type(img_e).__name__}). –ü—É–±–ª–∏–∫—É—é —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç...")
                except TelegramError as e: logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞: {e}")
                image_bytes = None # –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –ø—É–±–ª–∏–∫—É–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
        else:
             logger.info("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –æ—Ç–∫–ª—é—á–µ–Ω–∞, –ø—É–±–ª–∏–∫—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç.")


        # 3. –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ –∫–∞–Ω–∞–ª
        try:
            sent_message = None
            publication_type = "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ" # –¢–∏–ø –¥–ª—è –ª–æ–≥–æ–≤ –∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É

            # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∞ –æ –Ω–∞—á–∞–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
            try:
                status_msg = "‚è≥ –ü—É–±–ª–∏–∫—É—é —Ñ–æ—Ç–æ —Å —Ç–µ–∫—Å—Ç–æ–º..." if image_bytes else "‚è≥ –ü—É–±–ª–∏–∫—É—é —Ç–µ–∫—Å—Ç..."
                await query.edit_message_text(status_msg)
            except TelegramError as e: logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞ –ø–µ—Ä–µ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π: {e}")


            if image_bytes:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –§–û–¢–û —Å —Ç–µ–∫—Å—Ç–æ–º –≤ –ü–û–î–ü–ò–°–ò (caption)
                caption = text_to_publish
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç –¥–ª–∏–Ω—ã –ø–æ–¥–ø–∏—Å–∏ (1024 —Å–∏–º–≤–æ–ª–∞ –≤ Telegram)
                caption_limit = 1024
                if len(caption) > caption_limit:
                    logger.warning(f"–¢–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ ({len(caption)} —Å–∏–º–≤.) –¥–ª–∏–Ω–Ω–µ–µ –ª–∏–º–∏—Ç–∞ –ø–æ–¥–ø–∏—Å–∏ ({caption_limit}). –¢–µ–∫—Å—Ç –±—É–¥–µ—Ç –æ–±—Ä–µ–∑–∞–Ω.")
                    caption = caption[:caption_limit]

                sent_message = await ctx.bot.send_photo(
                    chat_id=config.CHANNEL_ID,
                    photo=io.BytesIO(image_bytes), # –ü–µ—Ä–µ–¥–∞–µ–º –±–∞–π—Ç—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                    caption=caption,
                    # parse_mode –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å, –µ—Å–ª–∏ –Ω—É–∂–µ–Ω Markdown/HTML –≤ –ø–æ–¥–ø–∏—Å–∏
                    # parse_mode=ParseMode.MARKDOWN
                )
                publication_type = "—Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é"
            else:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –¢–ï–ö–°–¢
                sent_message = await ctx.bot.send_message(
                    chat_id=config.CHANNEL_ID,
                    text=text_to_publish
                    # parse_mode=ParseMode.MARKDOWN # –ï—Å–ª–∏ –Ω—É–∂–µ–Ω Markdown/HTML –≤ —Ç–µ–∫—Å—Ç–µ
                )
                publication_type = "—Ç–µ–∫—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç"

            logger.info(f"–ü–æ—Å—Ç ({publication_type}) —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª {config.CHANNEL_ID}, message_id={sent_message.message_id}")

            # 4. –õ–æ–≥–∏—Ä—É–µ–º –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Å—Ç –≤ CSV (–ª–æ–≥–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç)
            try:
                log_post(
                    message_id=sent_message.message_id,
                    text=text_to_publish, # –õ–æ–≥–∏—Ä—É–µ–º –ü–û–õ–ù–´–ô —Ç–µ–∫—Å—Ç, –Ω–µ –æ–±—Ä–µ–∑–∞–Ω–Ω—ã–π caption
                    timestamp=sent_message.date, # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç Telegram
                    reactions=0 # –†–µ–∞–∫—Ü–∏–∏ –Ω–∞ –º–æ–º–µ–Ω—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã
                )
            except Exception as log_e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Å—Ç–∞ {sent_message.message_id} –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {log_e}")
                # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∞ –æ–± —ç—Ç–æ–π –ø—Ä–æ–±–ª–µ–º–µ, –æ–Ω–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –º–µ—à–∞—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
                await ctx.bot.send_message(
                    chat_id=config.ADMIN_ID,
                    text=f"‚ö†Ô∏è –ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω (ID: {sent_message.message_id}), –Ω–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –µ–≥–æ –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥: {log_e}"
                )

            # 5. –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ —Å –∞–¥–º–∏–Ω–æ–º - —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
            final_admin_text = f"‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ ({publication_type}) –≤ –∫–∞–Ω–∞–ª–µ!\n\n"
            preview_text = text_to_publish.replace('\n', ' ')[:100] # –ö—Ä–∞—Ç–∫–∏–π –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
            if image_bytes:
                 final_admin_text += f"üñºÔ∏è + _{preview_text}..._"
            else:
                 final_admin_text += f"_{preview_text}..._"

            try:
                 await query.edit_message_text(final_admin_text, parse_mode=ParseMode.MARKDOWN)
            except TelegramError as e:
                 logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –¥–ª—è –∞–¥–º–∏–Ω–∞: {e}")
                 # –ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º, –µ—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å
                 # await ctx.bot.send_message(config.ADMIN_ID, final_admin_text, parse_mode=ParseMode.MARKDOWN)


        except Forbidden as e:
            # –û—à–∏–±–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
            logger.error(f"‚ùå Forbidden: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª {config.CHANNEL_ID}: {e}. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ.", exc_info=True)
            error_text = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞: {e}\n–ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞ —Å –ø—Ä–∞–≤–æ–º –æ—Ç–ø—Ä–∞–≤–∫–∏ "
            error_text += "—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π." if image_bytes else "—Å–æ–æ–±—â–µ–Ω–∏–π."
            try:
                await query.edit_message_text(error_text)
            except TelegramError as te: logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –∞–¥–º–∏–Ω–∞ –æ–± –æ—à–∏–±–∫–µ Forbidden: {te}")

        except TelegramError as e:
             # –î—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏ Telegram API
             logger.error(f"‚ùå –û—à–∏–±–∫–∞ Telegram –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª {config.CHANNEL_ID}: {e}", exc_info=True)
             error_text = f"‚ùå –û—à–∏–±–∫–∞ Telegram –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {e}"
             try:
                 await query.edit_message_text(error_text)
             except TelegramError as te: logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –∞–¥–º–∏–Ω–∞ –æ–± –æ—à–∏–±–∫–µ Telegram: {te}")

        except Exception as e:
            # –õ—é–±–∞—è –¥—Ä—É–≥–∞—è –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞
            logger.error(f"‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª {config.CHANNEL_ID}: {e}", exc_info=True)
            error_text = f"‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {e}"
            try:
                await query.edit_message_text(error_text)
            except TelegramError as te: logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –∞–¥–º–∏–Ω–∞ –æ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–æ–π –æ—à–∏–±–∫–µ: {te}")


    # --- –õ–æ–≥–∏–∫–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–£–¥–∞–ª–∏—Ç—å" ---
    elif query.data == "delete":
        try:
            await query.edit_message_text("üóë –ß–µ—Ä–Ω–æ–≤–∏–∫ —É–¥–∞–ª–µ–Ω.")
            logger.info(f"–ß–µ—Ä–Ω–æ–≤–∏–∫ —É–¥–∞–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {query.from_user.id}")
        except TelegramError as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —á–µ—Ä–Ω–æ–≤–∏–∫–∞: {e}")

    # --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö callback_data ---
    else:
        logger.warning(f"–ü–æ–ª—É—á–µ–Ω –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π callback_data: '{query.data}' –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {query.from_user.id}")
        try:
            # –ú–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å, –Ω–µ –º–µ–Ω—è—è —Å–æ–æ–±—â–µ–Ω–∏–µ
            await query.answer("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.")
        except TelegramError as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π callback_query: {e}")

# --- –°–æ–∑–¥–∞–µ–º —Ö—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–ª–±—ç–∫–æ–≤ ---
callback_handler = CallbackQueryHandler(handle_callback)

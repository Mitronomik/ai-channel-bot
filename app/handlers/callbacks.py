import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, CallbackQueryHandler
from telegram.error import Forbidden # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
from .. import config
from ..post_logger import log_post # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è

logger = logging.getLogger(__name__)

# --- Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ (–ø–µ—Ä–µ–Ω–æ—Å–∏–º —Å—é–¥–∞ –¥–ª—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç–∏) ---
INLINE_ACTION_KB = InlineKeyboardMarkup([
    [
        InlineKeyboardButton("üì§ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", callback_data="publish"),
        InlineKeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å", callback_data="delete")
    ]
])

async def handle_callback(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏."""
    query = update.callback_query
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∞–¥–º–∏–Ω
    if query.from_user.id != config.ADMIN_ID:
        await query.answer("üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω.", show_alert=True)
        return

    await query.answer() # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –∫–æ–ª–±—ç–∫, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ—Å—Ç–∞–ª–∞ "–≥—Ä—É–∑–∏—Ç—å—Å—è"
    original_message_text = query.message.text # –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞

    if query.data == "publish":
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —á–µ—Ä–Ω–æ–≤–∏–∫–æ–º
        # –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å "üí° –ß–µ—Ä–Ω–æ–≤–∏–∫:" –∏–ª–∏ –ø–æ—Ö–æ–∂–∏–π
        text_to_publish = original_message_text
        prefixes_to_remove = ["üí° –ß–µ—Ä–Ω–æ–≤–∏–∫:", "üì∞ –ù–æ–≤–æ—Å—Ç—å:", "‚öôÔ∏è –ê–≤—Ç–æ–ø–æ—Å—Ç:"]
        for prefix in prefixes_to_remove:
             if text_to_publish.startswith(prefix):
                 text_to_publish = text_to_publish.split(prefix, 1)[1].strip()
                 break # –£–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å

        if not text_to_publish:
             logger.warning("–ü–æ–ø—ã—Ç–∫–∞ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø—É—Å—Ç–æ–π —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–µ—Ñ–∏–∫—Å–∞.")
             await query.edit_message_text("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Ç–µ–∫—Å—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.")
             return

        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ö–ê–ù–ê–õ
            sent_message = await ctx.bot.send_message(
                chat_id=config.CHANNEL_ID,
                text=text_to_publish
            )
            logger.info(f"–ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª {config.CHANNEL_ID}, message_id={sent_message.message_id}")

            # –õ–æ–≥–∏—Ä—É–µ–º –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Å—Ç –≤ CSV
            try:
                log_post(
                    message_id=sent_message.message_id,
                    text=text_to_publish,
                    timestamp=sent_message.date # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç Telegram
                )
            except Exception as log_e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Å—Ç–∞ {sent_message.message_id} –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {log_e}")
                # –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å, –Ω–æ —Å–æ–æ–±—â–∞–µ–º –æ–± –æ—à–∏–±–∫–µ

            # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ —Å –∞–¥–º–∏–Ω–æ–º
            await query.edit_message_text(f"‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –≤ –∫–∞–Ω–∞–ª–µ!\n\n{text_to_publish[:100]}...") # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á–∞—Å—Ç—å —Ç–µ–∫—Å—Ç–∞ –¥–ª—è —è—Å–Ω–æ—Å—Ç–∏

        except Forbidden as e:
            logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª {config.CHANNEL_ID}: {e}. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ.", exc_info=True)
            await query.edit_message_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {e}\n–ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞ —Å –ø—Ä–∞–≤–æ–º –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.")
        except Exception as e:
            logger.error(f"‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª {config.CHANNEL_ID}: {e}", exc_info=True)
            await query.edit_message_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {e}")

    elif query.data == "delete":
        await query.edit_message_text("üóë –ß–µ—Ä–Ω–æ–≤–∏–∫ —É–¥–∞–ª–µ–Ω.")
        logger.info(f"–ß–µ—Ä–Ω–æ–≤–∏–∫ —É–¥–∞–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {query.from_user.id}")

# –°–æ–∑–¥–∞–µ–º —Ö—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–ª–±—ç–∫–æ–≤
callback_handler = CallbackQueryHandler(handle_callback)

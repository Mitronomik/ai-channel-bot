import logging
from telegram.ext import ContextTypes
from telegram.error import TelegramError
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
from .. import config
from ..openai_client import get_async_openai_client
from ..post_logger import read_top_posts, log_post
from ..prompts import PROMPT_TMPL_AUTO # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–≤—Ç–æ-–ø—Ä–æ–º–ø—Ç (—Å–µ–π—á–∞—Å = idea)

logger = logging.getLogger(__name__)

async def auto_post_job(context: ContextTypes.DEFAULT_TYPE):
    """
    –§—É–Ω–∫—Ü–∏—è, –≤—ã–ø–æ–ª–Ω—è–µ–º–∞—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–æ–º –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞.
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–¥–µ—é –∏ –ø—É–±–ª–∏–∫—É–µ—Ç –µ—ë –≤ –∫–∞–Ω–∞–ª.
    """
    job = context.job
    logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞: {job.name}")

    try:
        # 1. –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ job.data (–µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–≤–∞–ª–∏)
        # channel_id = job.data.get("channel_id", config.CHANNEL_ID)
        # –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å config.CHANNEL_ID –Ω–∞–ø—Ä—è–º—É—é, –µ—Å–ª–∏ –æ–Ω –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è
        channel_id = config.CHANNEL_ID

        # 2. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç (–∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ /idea)
        top_posts_df = read_top_posts(5)
        posts_context = top_posts_df[['text', 'reactions']].to_string(index=False) if not top_posts_df.empty else "(–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ—à–ª—ã—Ö –ø–æ—Å—Ç–∞—Ö)"
        prompt = PROMPT_TMPL_AUTO.format(posts=posts_context)

        openai_client = get_async_openai_client()
        draft = None
        last_err = None
        used_model = config.MODEL

        # –ü–æ–ø—ã—Ç–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (—Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –∞–≤—Ç–æ–ø–æ—Å—Ç–∞, —á—Ç–æ–±—ã –Ω–µ —É—Å–ª–æ–∂–Ω—è—Ç—å)
        try:
            logger.info(f"–ê–≤—Ç–æ–ø–æ—Å—Ç: –ó–∞–ø—Ä–æ—Å –∫ OpenAI (–º–æ–¥–µ–ª—å: {config.MODEL})...")
            resp = await openai_client.chat.completions.create(
                model=config.MODEL,
                messages=[{"role": "user", "content": prompt}],
                max_tokens=400,
                temperature=0.75,
            )
            draft = resp.choices[0].message.content.strip()
            logger.info(f"–ê–≤—Ç–æ–ø–æ—Å—Ç: –ò–¥–µ—è —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ –º–æ–¥–µ–ª—å—é {config.MODEL}.")
        except Exception as e:
            last_err = e
            logger.error(f"‚ùå –ê–≤—Ç–æ–ø–æ—Å—Ç: –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ OpenAI ({config.MODEL}): {e}")
            # –ú–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –º–æ–¥–µ–ª—å –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç –∑–∞–ø—É—Å–∫
            # –ü–æ–∫–∞ –ø—Ä–æ–ø—É—Å—Ç–∏–º, —á—Ç–æ–±—ã –Ω–µ —Å–ø–∞–º–∏—Ç—å –æ—à–∏–±–∫–∞–º–∏
            await context.bot.send_message(
                 chat_id=config.ADMIN_ID, # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∞ –æ–± –æ—à–∏–±–∫–µ
                 text=f"‚ö†Ô∏è –ê–≤—Ç–æ–ø–æ—Å—Ç: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç.\n–û—à–∏–±–∫–∞: {e}"
            )
            return # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏

        # 3. –ü—É–±–ª–∏–∫—É–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª
        if draft:
            try:
                sent_message = await context.bot.send_message(
                    chat_id=channel_id,
                    text=draft
                )
                logger.info(f"‚úÖ –ê–≤—Ç–æ–ø–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –∫–∞–Ω–∞–ª {channel_id}, message_id={sent_message.message_id}")

                # 4. –õ–æ–≥–∏—Ä—É–µ–º –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Å—Ç
                try:
                    log_post(
                        message_id=sent_message.message_id,
                        text=draft,
                        timestamp=sent_message.date
                    )
                except Exception as log_e:
                    logger.error(f"‚ùå –ê–≤—Ç–æ–ø–æ—Å—Ç: –û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Å—Ç–∞ {sent_message.message_id}: {log_e}")
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É –æ –ø—Ä–æ–±–ª–µ–º–µ —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
                    await context.bot.send_message(
                         chat_id=config.ADMIN_ID,
                         text=f"‚ö†Ô∏è –ê–≤—Ç–æ–ø–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω (ID: {sent_message.message_id}), –Ω–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –µ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏: {log_e}"
                    )

            except TelegramError as e:
                logger.error(f"‚ùå –ê–≤—Ç–æ–ø–æ—Å—Ç: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª {channel_id}: {e}", exc_info=True)
                await context.bot.send_message(
                    chat_id=config.ADMIN_ID,
                    text=f"‚ùå –ê–≤—Ç–æ–ø–æ—Å—Ç: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª {channel_id}.\n–û—à–∏–±–∫–∞: {e}"
                )
            except Exception as e:
                 logger.error(f"‚ùå –ê–≤—Ç–æ–ø–æ—Å—Ç: –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {e}", exc_info=True)
                 await context.bot.send_message(
                    chat_id=config.ADMIN_ID,
                    text=f"‚ùå –ê–≤—Ç–æ–ø–æ—Å—Ç: –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {e}"
                )
        else:
            # –≠—Ç–∞ –≤–µ—Ç–∫–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –¥–æ—Å—Ç–∏–≥–∞—Ç—å—Å—è –∏–∑-–∑–∞ return –≤—ã—à–µ, –Ω–æ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
            logger.error("‚ùå –ê–≤—Ç–æ–ø–æ—Å—Ç: –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –ø—É—Å—Ç–æ–π —á–µ—Ä–Ω–æ–≤–∏–∫, –ø—É–±–ª–∏–∫–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")
            await context.bot.send_message(
                chat_id=config.ADMIN_ID,
                text="‚ö†Ô∏è –ê–≤—Ç–æ–ø–æ—Å—Ç: OpenAI –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –ø—É–±–ª–∏–∫–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞."
            )

    except Exception as e:
        logger.error(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –≤ –∑–∞–¥–∞—á–µ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞ {job.name}: {e}", exc_info=True)
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É –æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–µ –≤ —Å–∞–º–æ–π –∑–∞–¥–∞—á–µ
        try:
            await context.bot.send_message(
                chat_id=config.ADMIN_ID,
                text=f"üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –≤ –∑–∞–¥–∞—á–µ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞! –ó–∞–¥–∞—á–∞ –º–æ–≥–ª–∞ –±—ã—Ç—å –ø—Ä–µ—Ä–≤–∞–Ω–∞.\n–û—à–∏–±–∫–∞: {e}"
            )
        except Exception as send_e:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –¥–∞–∂–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∞–¥–º–∏–Ω—É: {send_e}")
